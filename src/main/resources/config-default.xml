<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
>

    <context:component-scan base-package="com.mb.spring.services.impl"/>
    <context:component-scan base-package="com.mb.spring.repository"/>
    <context:property-placeholder location="application.properties" />
    <aop:aspectj-autoproxy />

    <!-- injection by setter -->
    <bean id="todoService" class="com.mb.spring.services.impl.TodoServiceImpl">
        <property name="userService" ref="userService"/>
        <property name="emails">
            <list>
                <value>formation@ippon.com</value>
                <value>recrutement@ippon.com</value>
                <value>contact@ippon.com</value>
            </list>
        </property>
        <property name="towns" ref="towns"/>
    </bean>

    <!-- You can use it or you use what inserted property emails in todoService bean -->
    <!--<util:list id="emails">
        <value>formation@ippon.fr</value>
        <value>contact@ippon.fr</value>
        <value>recrutement@ippon.fr</value>
    </util:list>-->

    <util:map id="towns">
        <entry key="1" value="Douala"/>
        <entry key="2" value="Kribi"/>
        <entry key="3" value="Yaounde"/>
        <entry key="4" value="Ebolowa"/>
    </util:map>

    <!-- injection by constructor -->
    <bean id="userService" class="com.mb.spring.services.impl.UserServiceImpl">
        <constructor-arg ref="userRepository"/>
    </bean>

    <bean id="userRepository" class="com.mb.spring.services.impl.UserRepositoryImpl"/>

    <bean id="parentBean" class="com.mb.spring.services.impl.ParentBeanImpl">
        <property name="innerBean">
            <bean class="com.mb.spring.services.impl.InnerBeanImpl">
                <property name="age" value="2"/>
                <property name="name" value="David Essentiel"/>
            </bean>
        </property>
    </bean>
    <bean id="parentBeanDefinition" abstract="true">
        <property name="age" value="1"/>
        <property name="name" value="David"/>
    </bean>

    <bean id="childBean" class="com.mb.spring.services.impl.ChildBean" parent="parentBeanDefinition" init-method="initialize">
        <property name="name" value="Betsaleel"/>
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
</beans>